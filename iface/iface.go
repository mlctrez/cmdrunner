// Code generated by ifacemaker. DO NOT EDIT.

package iface

import (
	"context"
	"log"
	"syscall"

	"github.com/mlctrez/cmdrunner"
)

var _ CmdRunnerImpl = (*cmdrunner.CmdRunner)(nil)

type CmdRunnerImpl interface {
	// WithContext adds a context to the command runner
	WithContext(ctx context.Context) *cmdrunner.CmdRunner
	// WithCancelSignal sets the signal to pass to the process when the context is cancelled
	WithCancelSignal(signal syscall.Signal) *cmdrunner.CmdRunner
	// WithDebugLogger enables debugging messages.
	// Logging goes to the provided logger.
	WithDebugLogger(logger *log.Logger) *cmdrunner.CmdRunner
	// Start creates the stdout and stderr readers and sends output to the provided OutputSink.
	Start(outputSink cmdrunner.OutputSink) error
	// WaitExit waits for the command to exit, returning the exit code.
	WaitExit() int
}
